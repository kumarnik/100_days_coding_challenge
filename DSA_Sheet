1)ARRAYS:
1)finding maximum and minimum element in array by minimum comparisons.
#include <iostream>

using namespace std;

int main()
{
    int n,i;
    cin>>n;
    int a[10];
    int min,max;
    for(int i=0;i<n;i++)
    {
        cin>>a[i];
    }
    if(n%2==0)
    {
        if(a[0]>a[1])
        {
            max=a[0];
            min=a[1];
        }
        else
        {
            max=a[1];
            min=a[0];
            
        }
        i=1;
    }
    else
    {
        max=a[0];
        min=a[0];
        i=2;
    }
    
    
    while(i<n-1)
    {
        if(a[i]>a[i+1])
        {
            if(a[i]>max)
            {
                max=a[i];
            }
            if(a[i+1]<min)
            {
                min=a[i+1];
            }
            
        }
        else
        {
            if(a[i+1]>max)
            {
                max=a[i+1];
            }
            if(a[i]<min)
            {
                min=a[i];
            }
            
        }
        i=i+2;
    }
        
        cout<<"max is"<<max;
        cout<<"min is"<<min;

    return 0;
}



2)Sort colors:leetcode https://leetcode.com/problems/sort-colors/

class Solution {
public:
    void sortColors(vector<int>& nums) {
        
        int low=0;
        int mid=0;
        int high=nums.size()-1;
        int t;
        
        while(mid<=high)
        {
            if(nums[mid]==0)
            {
                t=nums[low];
                nums[low]=nums[mid];
                nums[mid]=t;
                low++;
                mid++;
                
            }
            else if(nums[mid]==1)
            {
                mid++;
                
            }
            else
            {
                t=nums[mid];
                nums[mid]=nums[high];
                nums[high]=t;
                high--;
                
            }
        }
        
        
    }
};




3)KADANE ALGO
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        
        int sum=0;
        int maxi=nums[0];
        for(int i=0;i<nums.size();i++)
        { 
            if(sum<0)
            {
                sum=0;
            }
            sum+=nums[i];
            maxi=max(maxi,sum);
        }
        return maxi;
        
    }
};
