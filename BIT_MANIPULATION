1)Check no. even or odd:
#include <iostream>
using namespace std;

int main()
{   int n;
    cin>>n;
    if((n&1)==0)
    {   cout<<"even";
    }
    else
    {   cout<<"not even";
    }
    return 0;
}


2)Swap 2 numbers without 3rd variable:
#include <iostream>
using namespace std;

int main()
{
    int a,b;
    cin>>a>>b;
    cout<<"before swap----> "<<"a="<<a<<" b="<<b<<endl;
    a=a^b;
    b=a^b;
    a=a^b;
    cout<<"after swap ---->"<<"a="<<a<<" b="<<b<<endl;
    
    return 0;
}


3) TATA ICLIQ : MAXIMIZE THE SUBARRAYS WITH EVEN SUM:


#include <iostream>
using namespace std;

int main()
{
    //int a[5]={1,2,3,4,5};
    int n,k;
    cin>>n;
    int a[n];
    for(int i=0;i<n;i++)
    {
        cin>>a[i];
    }
    cin>>k;
    //int k=2;
    int count=0;
    int pos,change;
    for(int i=0;i<5;i++)
    {
        if(a[i]%2==0)
        {
            count+=1;
            
            cout<<"i is"<<i<<endl;
            continue;
        }
        else
        {
            change=i+1;
            for(int j=i+1;j<5;j++)
            {
                if((a[j-1]%2!=0) && (a[j]%2!=0)&&(k>0))
                {
                    count+=1;
                    i=j+1;
                    k--;
                    break;
                }
                else if(a[j]%2!=0)
                {
                    pos=j;
                    cout<<"in pos wala"<<endl;
                    if((pos>change) &&(pos<5)&&(k>0))
                    {
                
                        cout<<"hello"<<endl<<pos<<" "<<change;
                        a[change]=a[change]^a[pos];
                        a[pos]=a[pos]^a[change];
                        a[change]=a[pos]^a[change];
                        k--;
                        count+=1;
                        
                    }
                    break;
                }
            }
            cout<<"iis"<<change<<endl;
            i=change;
        }
        
    }
    cout<<"count is"<<count;
    
}
